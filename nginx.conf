events{}
http {
    include /etc/nginx/mime.types;

    server_tokens off;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    resolver 127.0.0.11 valid=30s;

    server {
        listen 80;
        server_name birdegop.ru;
        return 301 https://$server_name$request_uri; # редирект обычных запросов на https
    }

    server {
        listen 443 ssl;
        server_name www.birdegop.ru;
        ssl_certificate /etc/nginx/birdegop.crt;
        ssl_certificate_key /etc/nginx/birdegop.key;
        
        client_max_body_size 50M;
		
		# заголовки для внутренних серверов
        proxy_set_header   X-Forwarded-Proto $scheme;
        proxy_set_header   Host              $host;
        proxy_set_header   X-Real-IP         $remote_addr;
        proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $http_connection;

        index index.html;        
   
        if ($request_method = "OPTIONS") {
            rewrite ^(.*)$ /opts break;
        }

        location ^~ /api {
            set $upstream backend:80;
            rewrite ^/api/(.*)$ /$1 break;
            proxy_pass http://$upstream;
            proxy_intercept_errors on;
            proxy_next_upstream error timeout http_502 http_503 http_504;
            error_page 502 =400 /400.json;
        }
        
        location ^~ / {
            set $upstream frontend:80;            
            rewrite ^/(.*)$ /$1 break;            
            proxy_pass http://$upstream;
            proxy_intercept_errors on;
            proxy_next_upstream error timeout http_502 http_503 http_504;
            error_page 502 =400 /400.json;
        }

        location /400.json {
            internal;
            add_header Content-Type "application/json";
            add_header Access-Control-Allow-Headers "*";
            add_header Access-Control-Allow-Methods "*";
            add_header Access-Control-Allow-Origin  "*";
            return 400 '{"error": "Server is down :( Sorry!"}';
        }
        
        location /opts {
            internal;
            add_header Access-Control-Allow-Headers "*";
            add_header Access-Control-Allow-Methods "*";
            add_header Access-Control-Allow-Origin  "*";
            return 204;
        }
    }
}
